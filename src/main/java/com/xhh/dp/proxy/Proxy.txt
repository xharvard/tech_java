代理模式是对象的结构模式。代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。

在某些情况下，一个客户不想或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。

在代理模式中的角色：
　●抽象对象角色：声明了目标对象和代理对象的共同接口，这样一来在任何可以使用目标对象的地方都可以使用代理对象。
　●目标对象角色：定义了代理对象所代表的目标对象。
　●代理对象角色：代理对象内部含有目标对象的引用，从而可以在任何时候操作目标对象；代理对象提供一个与目标对象相同的接口，
      以便可以在任何时候替代目标对象。代理对象通常在客户端调用传递给目标对象之前或之后，执行某个操作，而不是单纯地将调用传递给目标对象。
      
RMI:代理的具体实例

动态代理：AOP的实现理念


坦克为例：
静态代理实现：cn.xharvard.scrum2.tank.staticproxy
	如果我想在Tank的move()方法调用的前后加入更多的功能，是不是要写更多的代理主题角色，这样子会使得代码过于臃肿，不易于维护，
	我们可以动态的来生成代理主题角色，来代理所有的被代理对象，这就是动态代理。
		
动态代理实现：cn.xharvard.scrum2.tank.dynamicproxy
